/**
 * This class is generated by jOOQ
 */
package db.clases.tables;


import db.clases.Keys;
import db.clases.Public;
import db.clases.tables.records.ProductoRecord;

import java.math.BigDecimal;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Producto extends TableImpl<ProductoRecord> {

    private static final long serialVersionUID = -993481756;

    /**
     * The reference instance of <code>public.producto</code>
     */
    public static final Producto PRODUCTO = new Producto();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ProductoRecord> getRecordType() {
        return ProductoRecord.class;
    }

    /**
     * The column <code>public.producto.idproducto</code>.
     */
    public final TableField<ProductoRecord, Integer> IDPRODUCTO = createField("idproducto", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('producto_idproducto_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.producto.codigo</code>.
     */
    public final TableField<ProductoRecord, String> CODIGO = createField("codigo", org.jooq.impl.SQLDataType.VARCHAR.length(7), this, "");

    /**
     * The column <code>public.producto.nombre</code>.
     */
    public final TableField<ProductoRecord, String> NOMBRE = createField("nombre", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.producto.detalle</code>.
     */
    public final TableField<ProductoRecord, String> DETALLE = createField("detalle", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.producto.color</code>.
     */
    public final TableField<ProductoRecord, String> COLOR = createField("color", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.producto.imagen</code>.
     */
    public final TableField<ProductoRecord, byte[]> IMAGEN = createField("imagen", org.jooq.impl.SQLDataType.BLOB, this, "");

    /**
     * The column <code>public.producto.tiempofabrica</code>.
     */
    public final TableField<ProductoRecord, Integer> TIEMPOFABRICA = createField("tiempofabrica", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.producto.termina</code>.
     */
    public final TableField<ProductoRecord, String> TERMINA = createField("termina", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.producto.idcategoria</code>.
     */
    public final TableField<ProductoRecord, Integer> IDCATEGORIA = createField("idcategoria", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.producto.baja</code>.
     */
    public final TableField<ProductoRecord, Boolean> BAJA = createField("baja", org.jooq.impl.SQLDataType.BOOLEAN.defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>public.producto.costoadmin</code>.
     */
    public final TableField<ProductoRecord, BigDecimal> COSTOADMIN = createField("costoadmin", org.jooq.impl.SQLDataType.NUMERIC.precision(6, 2), this, "");

    /**
     * The column <code>public.producto.costoinv</code>.
     */
    public final TableField<ProductoRecord, BigDecimal> COSTOINV = createField("costoinv", org.jooq.impl.SQLDataType.NUMERIC.precision(6, 2), this, "");

    /**
     * Create a <code>public.producto</code> table reference
     */
    public Producto() {
        this("producto", null);
    }

    /**
     * Create an aliased <code>public.producto</code> table reference
     */
    public Producto(String alias) {
        this(alias, PRODUCTO);
    }

    private Producto(String alias, Table<ProductoRecord> aliased) {
        this(alias, aliased, null);
    }

    private Producto(String alias, Table<ProductoRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ProductoRecord, Integer> getIdentity() {
        return Keys.IDENTITY_PRODUCTO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ProductoRecord> getPrimaryKey() {
        return Keys.PK_PRODUCTO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ProductoRecord>> getKeys() {
        return Arrays.<UniqueKey<ProductoRecord>>asList(Keys.PK_PRODUCTO);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<ProductoRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ProductoRecord, ?>>asList(Keys.PRODUCTO__FK_PRODUCTO_CATEGORIA_PRODUCTO);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Producto as(String alias) {
        return new Producto(alias, this);
    }

    /**
     * Rename this table
     */
    public Producto rename(String name) {
        return new Producto(name, null);
    }
}
