/**
 * This class is generated by jOOQ
 */
package db.clases.tables;


import db.clases.Keys;
import db.clases.Public;
import db.clases.tables.records.RecetaRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Receta extends TableImpl<RecetaRecord> {

    private static final long serialVersionUID = -50082216;

    /**
     * The reference instance of <code>public.receta</code>
     */
    public static final Receta RECETA = new Receta();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RecetaRecord> getRecordType() {
        return RecetaRecord.class;
    }

    /**
     * The column <code>public.receta.descargo</code>.
     */
    public final TableField<RecetaRecord, Double> DESCARGO = createField("descargo", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>public.receta.idunidad</code>.
     */
    public final TableField<RecetaRecord, Integer> IDUNIDAD = createField("idunidad", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.receta.descontaren</code>.
     */
    public final TableField<RecetaRecord, String> DESCONTAREN = createField("descontaren", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.receta.idproducto</code>.
     */
    public final TableField<RecetaRecord, Integer> IDPRODUCTO = createField("idproducto", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.receta.idinventario</code>.
     */
    public final TableField<RecetaRecord, Integer> IDINVENTARIO = createField("idinventario", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>public.receta</code> table reference
     */
    public Receta() {
        this("receta", null);
    }

    /**
     * Create an aliased <code>public.receta</code> table reference
     */
    public Receta(String alias) {
        this(alias, RECETA);
    }

    private Receta(String alias, Table<RecetaRecord> aliased) {
        this(alias, aliased, null);
    }

    private Receta(String alias, Table<RecetaRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<RecetaRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<RecetaRecord, ?>>asList(Keys.RECETA__FK_RECETA_UNIDADMEDIDA, Keys.RECETA__FK_RECETA, Keys.RECETA__FK_RECETA_INVENTARIO);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Receta as(String alias) {
        return new Receta(alias, this);
    }

    /**
     * Rename this table
     */
    public Receta rename(String name) {
        return new Receta(name, null);
    }
}
