/**
 * This class is generated by jOOQ
 */
package db.clases.tables;


import db.clases.Keys;
import db.clases.Public;
import db.clases.tables.records.ContactoProveedorRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ContactoProveedor extends TableImpl<ContactoProveedorRecord> {

    private static final long serialVersionUID = -747789474;

    /**
     * The reference instance of <code>public.contacto_proveedor</code>
     */
    public static final ContactoProveedor CONTACTO_PROVEEDOR = new ContactoProveedor();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ContactoProveedorRecord> getRecordType() {
        return ContactoProveedorRecord.class;
    }

    /**
     * The column <code>public.contacto_proveedor.idcontacto</code>.
     */
    public final TableField<ContactoProveedorRecord, Integer> IDCONTACTO = createField("idcontacto", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval(('\"contacto_proveedor_idcontacto_seq\"'::text)::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.contacto_proveedor.nombre</code>.
     */
    public final TableField<ContactoProveedorRecord, String> NOMBRE = createField("nombre", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.contacto_proveedor.telefono</code>.
     */
    public final TableField<ContactoProveedorRecord, String> TELEFONO = createField("telefono", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.contacto_proveedor.idproveedor</code>.
     */
    public final TableField<ContactoProveedorRecord, Integer> IDPROVEEDOR = createField("idproveedor", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>public.contacto_proveedor</code> table reference
     */
    public ContactoProveedor() {
        this("contacto_proveedor", null);
    }

    /**
     * Create an aliased <code>public.contacto_proveedor</code> table reference
     */
    public ContactoProveedor(String alias) {
        this(alias, CONTACTO_PROVEEDOR);
    }

    private ContactoProveedor(String alias, Table<ContactoProveedorRecord> aliased) {
        this(alias, aliased, null);
    }

    private ContactoProveedor(String alias, Table<ContactoProveedorRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ContactoProveedorRecord, Integer> getIdentity() {
        return Keys.IDENTITY_CONTACTO_PROVEEDOR;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ContactoProveedorRecord> getPrimaryKey() {
        return Keys.PK_CONTACTO_PROVEEDOR;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ContactoProveedorRecord>> getKeys() {
        return Arrays.<UniqueKey<ContactoProveedorRecord>>asList(Keys.PK_CONTACTO_PROVEEDOR);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<ContactoProveedorRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ContactoProveedorRecord, ?>>asList(Keys.CONTACTO_PROVEEDOR__FK_CONTACTO_PROVEEDOR_PROVEEDOR);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ContactoProveedor as(String alias) {
        return new ContactoProveedor(alias, this);
    }

    /**
     * Rename this table
     */
    public ContactoProveedor rename(String name) {
        return new ContactoProveedor(name, null);
    }
}
