/**
 * This class is generated by jOOQ
 */
package db.clases.tables;


import db.clases.Keys;
import db.clases.Public;
import db.clases.tables.records.UnidadMedidaRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UnidadMedida extends TableImpl<UnidadMedidaRecord> {

    private static final long serialVersionUID = -1594240378;

    /**
     * The reference instance of <code>public.unidad_medida</code>
     */
    public static final UnidadMedida UNIDAD_MEDIDA = new UnidadMedida();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UnidadMedidaRecord> getRecordType() {
        return UnidadMedidaRecord.class;
    }

    /**
     * The column <code>public.unidad_medida.idunidad</code>.
     */
    public final TableField<UnidadMedidaRecord, Integer> IDUNIDAD = createField("idunidad", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval(('\"unidad_medida_idunidad_seq\"'::text)::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.unidad_medida.detalle</code>.
     */
    public final TableField<UnidadMedidaRecord, String> DETALLE = createField("detalle", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "");

    /**
     * The column <code>public.unidad_medida.idmedida</code>.
     */
    public final TableField<UnidadMedidaRecord, Integer> IDMEDIDA = createField("idmedida", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.unidad_medida.unidadpadre</code>.
     */
    public final TableField<UnidadMedidaRecord, Integer> UNIDADPADRE = createField("unidadpadre", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.unidad_medida.equivalencia</code>.
     */
    public final TableField<UnidadMedidaRecord, Double> EQUIVALENCIA = createField("equivalencia", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * Create a <code>public.unidad_medida</code> table reference
     */
    public UnidadMedida() {
        this("unidad_medida", null);
    }

    /**
     * Create an aliased <code>public.unidad_medida</code> table reference
     */
    public UnidadMedida(String alias) {
        this(alias, UNIDAD_MEDIDA);
    }

    private UnidadMedida(String alias, Table<UnidadMedidaRecord> aliased) {
        this(alias, aliased, null);
    }

    private UnidadMedida(String alias, Table<UnidadMedidaRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<UnidadMedidaRecord, Integer> getIdentity() {
        return Keys.IDENTITY_UNIDAD_MEDIDA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UnidadMedidaRecord> getPrimaryKey() {
        return Keys.PK_UNIDADMEDIDA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UnidadMedidaRecord>> getKeys() {
        return Arrays.<UniqueKey<UnidadMedidaRecord>>asList(Keys.PK_UNIDADMEDIDA);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<UnidadMedidaRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<UnidadMedidaRecord, ?>>asList(Keys.UNIDAD_MEDIDA__FK_UNIDADMEDIDA_MEDIDA, Keys.UNIDAD_MEDIDA__FK_UNIDADMEDIDA_UNIDADMEDIDA);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UnidadMedida as(String alias) {
        return new UnidadMedida(alias, this);
    }

    /**
     * Rename this table
     */
    public UnidadMedida rename(String name) {
        return new UnidadMedida(name, null);
    }
}
