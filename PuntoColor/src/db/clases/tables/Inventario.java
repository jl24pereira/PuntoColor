/**
 * This class is generated by jOOQ
 */
package db.clases.tables;


import db.clases.Keys;
import db.clases.Public;
import db.clases.tables.records.InventarioRecord;

import java.math.BigDecimal;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Inventario extends TableImpl<InventarioRecord> {

    private static final long serialVersionUID = -1496682095;

    /**
     * The reference instance of <code>public.inventario</code>
     */
    public static final Inventario INVENTARIO = new Inventario();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<InventarioRecord> getRecordType() {
        return InventarioRecord.class;
    }

    /**
     * The column <code>public.inventario.idinventario</code>.
     */
    public final TableField<InventarioRecord, Integer> IDINVENTARIO = createField("idinventario", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval(('\"inventario_idinventario_seq\"'::text)::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.inventario.codigo</code>.
     */
    public final TableField<InventarioRecord, String> CODIGO = createField("codigo", org.jooq.impl.SQLDataType.VARCHAR.length(7), this, "");

    /**
     * The column <code>public.inventario.nombre</code>.
     */
    public final TableField<InventarioRecord, String> NOMBRE = createField("nombre", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.inventario.descripcion</code>.
     */
    public final TableField<InventarioRecord, String> DESCRIPCION = createField("descripcion", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.inventario.idcategoria</code>.
     */
    public final TableField<InventarioRecord, Integer> IDCATEGORIA = createField("idcategoria", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.inventario.idunidad</code>.
     */
    public final TableField<InventarioRecord, Integer> IDUNIDAD = createField("idunidad", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.inventario.preciocompra</code>.
     */
    public final TableField<InventarioRecord, BigDecimal> PRECIOCOMPRA = createField("preciocompra", org.jooq.impl.SQLDataType.NUMERIC.precision(6, 2), this, "");

    /**
     * The column <code>public.inventario.minimo</code>.
     */
    public final TableField<InventarioRecord, Double> MINIMO = createField("minimo", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>public.inventario.maximo</code>.
     */
    public final TableField<InventarioRecord, Double> MAXIMO = createField("maximo", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>public.inventario.existencia</code>.
     */
    public final TableField<InventarioRecord, Double> EXISTENCIA = createField("existencia", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>public.inventario.baja</code>.
     */
    public final TableField<InventarioRecord, Boolean> BAJA = createField("baja", org.jooq.impl.SQLDataType.BOOLEAN.defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * Create a <code>public.inventario</code> table reference
     */
    public Inventario() {
        this("inventario", null);
    }

    /**
     * Create an aliased <code>public.inventario</code> table reference
     */
    public Inventario(String alias) {
        this(alias, INVENTARIO);
    }

    private Inventario(String alias, Table<InventarioRecord> aliased) {
        this(alias, aliased, null);
    }

    private Inventario(String alias, Table<InventarioRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<InventarioRecord, Integer> getIdentity() {
        return Keys.IDENTITY_INVENTARIO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<InventarioRecord> getPrimaryKey() {
        return Keys.PK_INVENTARIO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<InventarioRecord>> getKeys() {
        return Arrays.<UniqueKey<InventarioRecord>>asList(Keys.PK_INVENTARIO);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<InventarioRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<InventarioRecord, ?>>asList(Keys.INVENTARIO__FK_INVENTARIO_CATEGORIA_INVENTARIO, Keys.INVENTARIO__FK_INVENTARIO_UNIDAD_MEDIDA);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Inventario as(String alias) {
        return new Inventario(alias, this);
    }

    /**
     * Rename this table
     */
    public Inventario rename(String name) {
        return new Inventario(name, null);
    }
}
