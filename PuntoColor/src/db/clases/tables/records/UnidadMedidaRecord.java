/**
 * This class is generated by jOOQ
 */
package db.clases.tables.records;


import db.clases.tables.UnidadMedida;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UnidadMedidaRecord extends UpdatableRecordImpl<UnidadMedidaRecord> implements Record5<Integer, String, Integer, Integer, Double> {

    private static final long serialVersionUID = 1889155498;

    /**
     * Setter for <code>public.unidad_medida.idunidad</code>.
     */
    public void setIdunidad(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.unidad_medida.idunidad</code>.
     */
    public Integer getIdunidad() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.unidad_medida.detalle</code>.
     */
    public void setDetalle(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.unidad_medida.detalle</code>.
     */
    public String getDetalle() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.unidad_medida.idmedida</code>.
     */
    public void setIdmedida(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.unidad_medida.idmedida</code>.
     */
    public Integer getIdmedida() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>public.unidad_medida.unidadpadre</code>.
     */
    public void setUnidadpadre(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.unidad_medida.unidadpadre</code>.
     */
    public Integer getUnidadpadre() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>public.unidad_medida.equivalencia</code>.
     */
    public void setEquivalencia(Double value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.unidad_medida.equivalencia</code>.
     */
    public Double getEquivalencia() {
        return (Double) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, String, Integer, Integer, Double> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, String, Integer, Integer, Double> valuesRow() {
        return (Row5) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return UnidadMedida.UNIDAD_MEDIDA.IDUNIDAD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return UnidadMedida.UNIDAD_MEDIDA.DETALLE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return UnidadMedida.UNIDAD_MEDIDA.IDMEDIDA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return UnidadMedida.UNIDAD_MEDIDA.UNIDADPADRE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field5() {
        return UnidadMedida.UNIDAD_MEDIDA.EQUIVALENCIA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getIdunidad();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getDetalle();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getIdmedida();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getUnidadpadre();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value5() {
        return getEquivalencia();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UnidadMedidaRecord value1(Integer value) {
        setIdunidad(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UnidadMedidaRecord value2(String value) {
        setDetalle(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UnidadMedidaRecord value3(Integer value) {
        setIdmedida(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UnidadMedidaRecord value4(Integer value) {
        setUnidadpadre(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UnidadMedidaRecord value5(Double value) {
        setEquivalencia(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UnidadMedidaRecord values(Integer value1, String value2, Integer value3, Integer value4, Double value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UnidadMedidaRecord
     */
    public UnidadMedidaRecord() {
        super(UnidadMedida.UNIDAD_MEDIDA);
    }

    /**
     * Create a detached, initialised UnidadMedidaRecord
     */
    public UnidadMedidaRecord(Integer idunidad, String detalle, Integer idmedida, Integer unidadpadre, Double equivalencia) {
        super(UnidadMedida.UNIDAD_MEDIDA);

        set(0, idunidad);
        set(1, detalle);
        set(2, idmedida);
        set(3, unidadpadre);
        set(4, equivalencia);
    }
}
