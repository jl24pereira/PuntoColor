/**
 * This class is generated by jOOQ
 */
package db.clases.tables.records;


import db.clases.tables.Permisos;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PermisosRecord extends TableRecordImpl<PermisosRecord> implements Record3<Integer, Integer, Boolean> {

    private static final long serialVersionUID = -296476438;

    /**
     * Setter for <code>public.permisos.idusuario</code>.
     */
    public void setIdusuario(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.permisos.idusuario</code>.
     */
    public Integer getIdusuario() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.permisos.idrol</code>.
     */
    public void setIdrol(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.permisos.idrol</code>.
     */
    public Integer getIdrol() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.permisos.permiso</code>.
     */
    public void setPermiso(Boolean value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.permisos.permiso</code>.
     */
    public Boolean getPermiso() {
        return (Boolean) get(2);
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, Integer, Boolean> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, Integer, Boolean> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Permisos.PERMISOS.IDUSUARIO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return Permisos.PERMISOS.IDROL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field3() {
        return Permisos.PERMISOS.PERMISO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getIdusuario();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getIdrol();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value3() {
        return getPermiso();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PermisosRecord value1(Integer value) {
        setIdusuario(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PermisosRecord value2(Integer value) {
        setIdrol(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PermisosRecord value3(Boolean value) {
        setPermiso(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PermisosRecord values(Integer value1, Integer value2, Boolean value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PermisosRecord
     */
    public PermisosRecord() {
        super(Permisos.PERMISOS);
    }

    /**
     * Create a detached, initialised PermisosRecord
     */
    public PermisosRecord(Integer idusuario, Integer idrol, Boolean permiso) {
        super(Permisos.PERMISOS);

        set(0, idusuario);
        set(1, idrol);
        set(2, permiso);
    }
}
