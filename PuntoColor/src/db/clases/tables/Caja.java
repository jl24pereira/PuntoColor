/**
 * This class is generated by jOOQ
 */
package db.clases.tables;


import db.clases.Keys;
import db.clases.Public;
import db.clases.tables.records.CajaRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Caja extends TableImpl<CajaRecord> {

    private static final long serialVersionUID = 356304740;

    /**
     * The reference instance of <code>public.caja</code>
     */
    public static final Caja CAJA = new Caja();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CajaRecord> getRecordType() {
        return CajaRecord.class;
    }

    /**
     * The column <code>public.caja.idcaja</code>.
     */
    public final TableField<CajaRecord, Integer> IDCAJA = createField("idcaja", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('caja_idcaja_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.caja.ipcaja</code>.
     */
    public final TableField<CajaRecord, String> IPCAJA = createField("ipcaja", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.caja.estado</code>.
     */
    public final TableField<CajaRecord, Boolean> ESTADO = createField("estado", org.jooq.impl.SQLDataType.BOOLEAN.defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>public.caja.detalle</code>.
     */
    public final TableField<CajaRecord, String> DETALLE = createField("detalle", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.caja.baja</code>.
     */
    public final TableField<CajaRecord, Boolean> BAJA = createField("baja", org.jooq.impl.SQLDataType.BOOLEAN.defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * Create a <code>public.caja</code> table reference
     */
    public Caja() {
        this("caja", null);
    }

    /**
     * Create an aliased <code>public.caja</code> table reference
     */
    public Caja(String alias) {
        this(alias, CAJA);
    }

    private Caja(String alias, Table<CajaRecord> aliased) {
        this(alias, aliased, null);
    }

    private Caja(String alias, Table<CajaRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<CajaRecord, Integer> getIdentity() {
        return Keys.IDENTITY_CAJA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CajaRecord> getPrimaryKey() {
        return Keys.CAJA_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CajaRecord>> getKeys() {
        return Arrays.<UniqueKey<CajaRecord>>asList(Keys.CAJA_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Caja as(String alias) {
        return new Caja(alias, this);
    }

    /**
     * Rename this table
     */
    public Caja rename(String name) {
        return new Caja(name, null);
    }
}
