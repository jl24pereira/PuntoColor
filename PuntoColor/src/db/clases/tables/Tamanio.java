/**
 * This class is generated by jOOQ
 */
package db.clases.tables;


import db.clases.Keys;
import db.clases.Public;
import db.clases.tables.records.TamanioRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Tamanio extends TableImpl<TamanioRecord> {

    private static final long serialVersionUID = -609830801;

    /**
     * The reference instance of <code>public.tamanio</code>
     */
    public static final Tamanio TAMANIO = new Tamanio();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TamanioRecord> getRecordType() {
        return TamanioRecord.class;
    }

    /**
     * The column <code>public.tamanio.idtamanio</code>.
     */
    public final TableField<TamanioRecord, Integer> IDTAMANIO = createField("idtamanio", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval(('\"tamanio_idtamanio_seq\"'::text)::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.tamanio.tamanio</code>.
     */
    public final TableField<TamanioRecord, String> TAMANIO_ = createField("tamanio", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.tamanio.idproducto</code>.
     */
    public final TableField<TamanioRecord, Integer> IDPRODUCTO = createField("idproducto", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>public.tamanio</code> table reference
     */
    public Tamanio() {
        this("tamanio", null);
    }

    /**
     * Create an aliased <code>public.tamanio</code> table reference
     */
    public Tamanio(String alias) {
        this(alias, TAMANIO);
    }

    private Tamanio(String alias, Table<TamanioRecord> aliased) {
        this(alias, aliased, null);
    }

    private Tamanio(String alias, Table<TamanioRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TamanioRecord, Integer> getIdentity() {
        return Keys.IDENTITY_TAMANIO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TamanioRecord> getPrimaryKey() {
        return Keys.PK_TAMANIO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TamanioRecord>> getKeys() {
        return Arrays.<UniqueKey<TamanioRecord>>asList(Keys.PK_TAMANIO);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<TamanioRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<TamanioRecord, ?>>asList(Keys.TAMANIO__FK_TAMANIO_PRODUCTO);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Tamanio as(String alias) {
        return new Tamanio(alias, this);
    }

    /**
     * Rename this table
     */
    public Tamanio rename(String name) {
        return new Tamanio(name, null);
    }
}
