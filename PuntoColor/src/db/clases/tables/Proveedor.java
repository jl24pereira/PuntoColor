/**
 * This class is generated by jOOQ
 */
package db.clases.tables;


import db.clases.Keys;
import db.clases.Public;
import db.clases.tables.records.ProveedorRecord;

import java.math.BigDecimal;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Proveedor extends TableImpl<ProveedorRecord> {

    private static final long serialVersionUID = 1141744245;

    /**
     * The reference instance of <code>public.proveedor</code>
     */
    public static final Proveedor PROVEEDOR = new Proveedor();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ProveedorRecord> getRecordType() {
        return ProveedorRecord.class;
    }

    /**
     * The column <code>public.proveedor.idproveedor</code>.
     */
    public final TableField<ProveedorRecord, Integer> IDPROVEEDOR = createField("idproveedor", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval(('\"proveedor_idproveedor_seq\"'::text)::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.proveedor.nombre</code>.
     */
    public final TableField<ProveedorRecord, String> NOMBRE = createField("nombre", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.proveedor.direccion</code>.
     */
    public final TableField<ProveedorRecord, String> DIRECCION = createField("direccion", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.proveedor.telefono</code>.
     */
    public final TableField<ProveedorRecord, String> TELEFONO = createField("telefono", org.jooq.impl.SQLDataType.VARCHAR.length(9), this, "");

    /**
     * The column <code>public.proveedor.email</code>.
     */
    public final TableField<ProveedorRecord, String> EMAIL = createField("email", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.proveedor.representante</code>.
     */
    public final TableField<ProveedorRecord, String> REPRESENTANTE = createField("representante", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.proveedor.giro</code>.
     */
    public final TableField<ProveedorRecord, String> GIRO = createField("giro", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.proveedor.iva</code>.
     */
    public final TableField<ProveedorRecord, String> IVA = createField("iva", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "");

    /**
     * The column <code>public.proveedor.nit</code>.
     */
    public final TableField<ProveedorRecord, String> NIT = createField("nit", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "");

    /**
     * The column <code>public.proveedor.registro</code>.
     */
    public final TableField<ProveedorRecord, String> REGISTRO = createField("registro", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "");

    /**
     * The column <code>public.proveedor.tipoproveedor</code>.
     */
    public final TableField<ProveedorRecord, String> TIPOPROVEEDOR = createField("tipoproveedor", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.proveedor.plazo</code>.
     */
    public final TableField<ProveedorRecord, Integer> PLAZO = createField("plazo", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.proveedor.limite</code>.
     */
    public final TableField<ProveedorRecord, BigDecimal> LIMITE = createField("limite", org.jooq.impl.SQLDataType.NUMERIC.precision(6, 2), this, "");

    /**
     * The column <code>public.proveedor.ctabancaria</code>.
     */
    public final TableField<ProveedorRecord, String> CTABANCARIA = createField("ctabancaria", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "");

    /**
     * The column <code>public.proveedor.baja</code>.
     */
    public final TableField<ProveedorRecord, Boolean> BAJA = createField("baja", org.jooq.impl.SQLDataType.BOOLEAN.defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * Create a <code>public.proveedor</code> table reference
     */
    public Proveedor() {
        this("proveedor", null);
    }

    /**
     * Create an aliased <code>public.proveedor</code> table reference
     */
    public Proveedor(String alias) {
        this(alias, PROVEEDOR);
    }

    private Proveedor(String alias, Table<ProveedorRecord> aliased) {
        this(alias, aliased, null);
    }

    private Proveedor(String alias, Table<ProveedorRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ProveedorRecord, Integer> getIdentity() {
        return Keys.IDENTITY_PROVEEDOR;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ProveedorRecord> getPrimaryKey() {
        return Keys.PK_PROVEEDOR;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ProveedorRecord>> getKeys() {
        return Arrays.<UniqueKey<ProveedorRecord>>asList(Keys.PK_PROVEEDOR);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Proveedor as(String alias) {
        return new Proveedor(alias, this);
    }

    /**
     * Rename this table
     */
    public Proveedor rename(String name) {
        return new Proveedor(name, null);
    }
}
