/**
 * This class is generated by jOOQ
 */
package db.clases.tables;


import db.clases.Keys;
import db.clases.Public;
import db.clases.tables.records.GastoProductoRecord;

import java.math.BigDecimal;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GastoProducto extends TableImpl<GastoProductoRecord> {

    private static final long serialVersionUID = 942410506;

    /**
     * The reference instance of <code>public.gasto_producto</code>
     */
    public static final GastoProducto GASTO_PRODUCTO = new GastoProducto();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<GastoProductoRecord> getRecordType() {
        return GastoProductoRecord.class;
    }

    /**
     * The column <code>public.gasto_producto.idgasto</code>.
     */
    public final TableField<GastoProductoRecord, Integer> IDGASTO = createField("idgasto", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.gasto_producto.gasto</code>.
     */
    public final TableField<GastoProductoRecord, BigDecimal> GASTO = createField("gasto", org.jooq.impl.SQLDataType.NUMERIC.precision(6, 2), this, "");

    /**
     * The column <code>public.gasto_producto.idproducto</code>.
     */
    public final TableField<GastoProductoRecord, Integer> IDPRODUCTO = createField("idproducto", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>public.gasto_producto</code> table reference
     */
    public GastoProducto() {
        this("gasto_producto", null);
    }

    /**
     * Create an aliased <code>public.gasto_producto</code> table reference
     */
    public GastoProducto(String alias) {
        this(alias, GASTO_PRODUCTO);
    }

    private GastoProducto(String alias, Table<GastoProductoRecord> aliased) {
        this(alias, aliased, null);
    }

    private GastoProducto(String alias, Table<GastoProductoRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<GastoProductoRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<GastoProductoRecord, ?>>asList(Keys.GASTO_PRODUCTO__FK_GASTO_PRODUCTO_GASTOS, Keys.GASTO_PRODUCTO__FK_GASTO_PRODUCTO_PRODUCTO);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GastoProducto as(String alias) {
        return new GastoProducto(alias, this);
    }

    /**
     * Rename this table
     */
    public GastoProducto rename(String name) {
        return new GastoProducto(name, null);
    }
}
