/**
 * This class is generated by jOOQ
 */
package db.clases.tables;


import db.clases.Keys;
import db.clases.Public;
import db.clases.tables.records.CotizacionPedidoRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CotizacionPedido extends TableImpl<CotizacionPedidoRecord> {

    private static final long serialVersionUID = 1029155515;

    /**
     * The reference instance of <code>public.cotizacion_pedido</code>
     */
    public static final CotizacionPedido COTIZACION_PEDIDO = new CotizacionPedido();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CotizacionPedidoRecord> getRecordType() {
        return CotizacionPedidoRecord.class;
    }

    /**
     * The column <code>public.cotizacion_pedido.idpedido</code>.
     */
    public final TableField<CotizacionPedidoRecord, Integer> IDPEDIDO = createField("idpedido", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.cotizacion_pedido.idcotizacion</code>.
     */
    public final TableField<CotizacionPedidoRecord, Integer> IDCOTIZACION = createField("idcotizacion", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>public.cotizacion_pedido</code> table reference
     */
    public CotizacionPedido() {
        this("cotizacion_pedido", null);
    }

    /**
     * Create an aliased <code>public.cotizacion_pedido</code> table reference
     */
    public CotizacionPedido(String alias) {
        this(alias, COTIZACION_PEDIDO);
    }

    private CotizacionPedido(String alias, Table<CotizacionPedidoRecord> aliased) {
        this(alias, aliased, null);
    }

    private CotizacionPedido(String alias, Table<CotizacionPedidoRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<CotizacionPedidoRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<CotizacionPedidoRecord, ?>>asList(Keys.COTIZACION_PEDIDO__FK_COTIZACION_PEDIDO_PEDIDO, Keys.COTIZACION_PEDIDO__FK_COTIZACION_PEDIDO_COTIZACION);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CotizacionPedido as(String alias) {
        return new CotizacionPedido(alias, this);
    }

    /**
     * Rename this table
     */
    public CotizacionPedido rename(String name) {
        return new CotizacionPedido(name, null);
    }
}
