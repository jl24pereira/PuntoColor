/**
 * This class is generated by jOOQ
 */
package db.clases.tables;


import db.clases.Keys;
import db.clases.Public;
import db.clases.tables.records.PedidoVentaRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PedidoVenta extends TableImpl<PedidoVentaRecord> {

    private static final long serialVersionUID = -1121397709;

    /**
     * The reference instance of <code>public.pedido_venta</code>
     */
    public static final PedidoVenta PEDIDO_VENTA = new PedidoVenta();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PedidoVentaRecord> getRecordType() {
        return PedidoVentaRecord.class;
    }

    /**
     * The column <code>public.pedido_venta.idventa</code>.
     */
    public final TableField<PedidoVentaRecord, Integer> IDVENTA = createField("idventa", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.pedido_venta.idpedido</code>.
     */
    public final TableField<PedidoVentaRecord, Integer> IDPEDIDO = createField("idpedido", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>public.pedido_venta</code> table reference
     */
    public PedidoVenta() {
        this("pedido_venta", null);
    }

    /**
     * Create an aliased <code>public.pedido_venta</code> table reference
     */
    public PedidoVenta(String alias) {
        this(alias, PEDIDO_VENTA);
    }

    private PedidoVenta(String alias, Table<PedidoVentaRecord> aliased) {
        this(alias, aliased, null);
    }

    private PedidoVenta(String alias, Table<PedidoVentaRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<PedidoVentaRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<PedidoVentaRecord, ?>>asList(Keys.PEDIDO_VENTA__FK_PEDIDOVENTA_VENTA, Keys.PEDIDO_VENTA__FK_PEDIDO_VENTA_PEDIDO);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PedidoVenta as(String alias) {
        return new PedidoVenta(alias, this);
    }

    /**
     * Rename this table
     */
    public PedidoVenta rename(String name) {
        return new PedidoVenta(name, null);
    }
}
