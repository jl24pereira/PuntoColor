/**
 * This class is generated by jOOQ
 */
package db.clases.tables;


import db.clases.Keys;
import db.clases.Public;
import db.clases.tables.records.ComprasRecord;

import java.math.BigDecimal;
import java.sql.Date;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Compras extends TableImpl<ComprasRecord> {

    private static final long serialVersionUID = 1743754232;

    /**
     * The reference instance of <code>public.compras</code>
     */
    public static final Compras COMPRAS = new Compras();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ComprasRecord> getRecordType() {
        return ComprasRecord.class;
    }

    /**
     * The column <code>public.compras.idcompra</code>.
     */
    public final TableField<ComprasRecord, Integer> IDCOMPRA = createField("idcompra", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval(('\"compras_idcompra_seq\"'::text)::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.compras.fecha</code>.
     */
    public final TableField<ComprasRecord, Date> FECHA = createField("fecha", org.jooq.impl.SQLDataType.DATE, this, "");

    /**
     * The column <code>public.compras.idproveedor</code>.
     */
    public final TableField<ComprasRecord, Integer> IDPROVEEDOR = createField("idproveedor", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.compras.tipodocumento</code>.
     */
    public final TableField<ComprasRecord, String> TIPODOCUMENTO = createField("tipodocumento", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.compras.numerodocumento</code>.
     */
    public final TableField<ComprasRecord, String> NUMERODOCUMENTO = createField("numerodocumento", org.jooq.impl.SQLDataType.VARCHAR.length(20), this, "");

    /**
     * The column <code>public.compras.total</code>.
     */
    public final TableField<ComprasRecord, BigDecimal> TOTAL = createField("total", org.jooq.impl.SQLDataType.NUMERIC.precision(6, 2), this, "");

    /**
     * Create a <code>public.compras</code> table reference
     */
    public Compras() {
        this("compras", null);
    }

    /**
     * Create an aliased <code>public.compras</code> table reference
     */
    public Compras(String alias) {
        this(alias, COMPRAS);
    }

    private Compras(String alias, Table<ComprasRecord> aliased) {
        this(alias, aliased, null);
    }

    private Compras(String alias, Table<ComprasRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ComprasRecord, Integer> getIdentity() {
        return Keys.IDENTITY_COMPRAS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ComprasRecord> getPrimaryKey() {
        return Keys.PK_COMPRAS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ComprasRecord>> getKeys() {
        return Arrays.<UniqueKey<ComprasRecord>>asList(Keys.PK_COMPRAS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<ComprasRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ComprasRecord, ?>>asList(Keys.COMPRAS__FK_COMPRAS_PROVEEDOR);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Compras as(String alias) {
        return new Compras(alias, this);
    }

    /**
     * Rename this table
     */
    public Compras rename(String name) {
        return new Compras(name, null);
    }
}
