/**
 * This class is generated by jOOQ
 */
package db.clases.tables;


import db.clases.Keys;
import db.clases.Public;
import db.clases.tables.records.CategoriaClienteRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CategoriaCliente extends TableImpl<CategoriaClienteRecord> {

    private static final long serialVersionUID = -993879240;

    /**
     * The reference instance of <code>public.categoria_cliente</code>
     */
    public static final CategoriaCliente CATEGORIA_CLIENTE = new CategoriaCliente();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CategoriaClienteRecord> getRecordType() {
        return CategoriaClienteRecord.class;
    }

    /**
     * The column <code>public.categoria_cliente.idcategoria</code>.
     */
    public final TableField<CategoriaClienteRecord, Integer> IDCATEGORIA = createField("idcategoria", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval(('\"categoria_cliente_idcategoria_seq\"'::text)::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.categoria_cliente.categoria</code>.
     */
    public final TableField<CategoriaClienteRecord, String> CATEGORIA = createField("categoria", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a <code>public.categoria_cliente</code> table reference
     */
    public CategoriaCliente() {
        this("categoria_cliente", null);
    }

    /**
     * Create an aliased <code>public.categoria_cliente</code> table reference
     */
    public CategoriaCliente(String alias) {
        this(alias, CATEGORIA_CLIENTE);
    }

    private CategoriaCliente(String alias, Table<CategoriaClienteRecord> aliased) {
        this(alias, aliased, null);
    }

    private CategoriaCliente(String alias, Table<CategoriaClienteRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<CategoriaClienteRecord, Integer> getIdentity() {
        return Keys.IDENTITY_CATEGORIA_CLIENTE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CategoriaClienteRecord> getPrimaryKey() {
        return Keys.PK_CATEGORIACLIENTE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CategoriaClienteRecord>> getKeys() {
        return Arrays.<UniqueKey<CategoriaClienteRecord>>asList(Keys.PK_CATEGORIACLIENTE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CategoriaCliente as(String alias) {
        return new CategoriaCliente(alias, this);
    }

    /**
     * Rename this table
     */
    public CategoriaCliente rename(String name) {
        return new CategoriaCliente(name, null);
    }
}
