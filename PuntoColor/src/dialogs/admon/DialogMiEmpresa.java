package dialogs.admon;

import clases.ImageConverter;
import clases.Mensajes;
import design.button.ButtonUI;
import java.awt.Image;
import java.awt.Rectangle;
import java.awt.event.KeyEvent;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.jooq.DSLContext;
import org.jooq.Record;
import org.jooq.SQLDialect;
import org.jooq.impl.DSL;

import static db.clases.Tables.EMPRESA;
import static org.jooq.impl.DSL.count;
import static puntocolor.Principal.cBtnNormal;
import static puntocolor.Principal.cBtnOver;
import static puntocolor.Principal.cBtnPress;
import static puntocolor.Principal.colorBG;
import static puntocolor.Principal.colorTexto;
import static puntocolor.Principal.colorUI;
import static puntocolor.Principal.database;

/*@author JL Desk */
public class DialogMiEmpresa extends javax.swing.JDialog {

    FileInputStream fis;
    int longitudBytes;
    DSLContext create = DSL.using ( database.getConexion () , SQLDialect.POSTGRES_9_5 );
    byte[] byteImage;
    ByteArrayOutputStream bos;
    File file = null;
    File firma = null;
    File sello = null;
    String NIT;
    boolean nuevo = false;

    public DialogMiEmpresa ( java.awt.Frame parent , boolean modal , String titulo ) {
        super ( parent , modal );
        this.setTitle ( titulo );
        initComponents ();
        this.setLocationRelativeTo ( null );
        cargarInfo ();
        txtNombre.requestFocusInWindow ();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings ( "unchecked" )
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        pBody = new javax.swing.JPanel();
        jToolBar1 = new javax.swing.JToolBar();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        btnGuardar = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        btnCancelar = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JToolBar.Separator();
        btnCargarLogo = new javax.swing.JButton();
        jSeparator4 = new javax.swing.JToolBar.Separator();
        btnCargarFirma = new javax.swing.JButton();
        jSeparator5 = new javax.swing.JToolBar.Separator();
        btnCargarSello = new javax.swing.JButton();
        pTitulo = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        lblFoto = new javax.swing.JLabel();
        lblFirma = new javax.swing.JLabel();
        lblSello = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        lblNombre = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        lblDireccion = new javax.swing.JLabel();
        txtDireccion = new javax.swing.JTextField();
        lblTelefono = new javax.swing.JLabel();
        lblMail = new javax.swing.JLabel();
        txtMail = new javax.swing.JTextField();
        lblPropietario = new javax.swing.JLabel();
        txtPropietario = new javax.swing.JTextField();
        lblGiro = new javax.swing.JLabel();
        lblRegistro = new javax.swing.JLabel();
        txtIva = new javax.swing.JTextField();
        lblNit = new javax.swing.JLabel();
        txtGiro = new javax.swing.JTextField();
        txtNit = new javax.swing.JFormattedTextField();
        txtTelefono = new javax.swing.JFormattedTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(800, 550));
        setMinimumSize(new java.awt.Dimension(800, 550));
        setPreferredSize(new java.awt.Dimension(800, 750));
        setResizable(false);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        pBody.setBackground(colorBG);
        pBody.setMinimumSize(new java.awt.Dimension(100, 100));
        pBody.setPreferredSize(new java.awt.Dimension(100, 100));
        pBody.setLayout(new java.awt.GridBagLayout());

        jToolBar1.setBackground(colorUI);
        jToolBar1.setBorder(javax.swing.BorderFactory.createLineBorder(colorUI, 2));
        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);
        jToolBar1.setMaximumSize(new java.awt.Dimension(100, 60));
        jToolBar1.setMinimumSize(new java.awt.Dimension(100, 60));
        jToolBar1.setPreferredSize(new java.awt.Dimension(100, 60));
        jToolBar1.add(jSeparator1);

        btnGuardar.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnGuardar.setForeground(colorTexto);
        btnGuardar.setText("Guardar");
        btnGuardar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnGuardar.setFocusable(false);
        btnGuardar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnGuardar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });
        jToolBar1.add(btnGuardar);
        btnGuardar.setUI(new ButtonUI(
            cBtnNormal,
            cBtnOver,
            cBtnPress
        ));
        jToolBar1.add(jSeparator2);

        btnCancelar.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnCancelar.setForeground(colorTexto);
        btnCancelar.setText("Cancelar");
        btnCancelar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCancelar.setFocusable(false);
        btnCancelar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnCancelar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });
        jToolBar1.add(btnCancelar);
        btnCancelar.setUI(new ButtonUI(
            cBtnNormal,
            cBtnOver,
            cBtnPress
        ));
        jToolBar1.add(jSeparator3);

        btnCargarLogo.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnCargarLogo.setForeground(colorTexto);
        btnCargarLogo.setText("Logo");
        btnCargarLogo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCargarLogo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCargarLogoActionPerformed(evt);
            }
        });
        jToolBar1.add(btnCargarLogo);
        btnCargarLogo.setUI(new ButtonUI(
            cBtnNormal,
            cBtnOver,
            cBtnPress
        ));
        jToolBar1.add(jSeparator4);

        btnCargarFirma.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnCargarFirma.setForeground(colorTexto);
        btnCargarFirma.setText("Firma");
        btnCargarFirma.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCargarFirma.setFocusable(false);
        btnCargarFirma.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnCargarFirma.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnCargarFirma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCargarFirmaActionPerformed(evt);
            }
        });
        jToolBar1.add(btnCargarFirma);
        btnCargarFirma.setUI(new ButtonUI(
            cBtnNormal,
            cBtnOver,
            cBtnPress
        ));
        jToolBar1.add(jSeparator5);

        btnCargarSello.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnCargarSello.setForeground(colorTexto);
        btnCargarSello.setText("Sello");
        btnCargarSello.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCargarSello.setFocusable(false);
        btnCargarSello.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnCargarSello.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnCargarSello.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCargarSelloActionPerformed(evt);
            }
        });
        jToolBar1.add(btnCargarSello);
        btnCargarSello.setUI(new ButtonUI(
            cBtnNormal,
            cBtnOver,
            cBtnPress
        ));

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        pBody.add(jToolBar1, gridBagConstraints);

        pTitulo.setOpaque(false);
        pTitulo.setLayout(new java.awt.GridBagLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(colorUI);
        jLabel1.setText("Mi Empresa");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        pTitulo.add(jLabel1, gridBagConstraints);

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Simple Icon Pack/png/128/company_128x128.png"))); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        pTitulo.add(jLabel6, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        pBody.add(pTitulo, gridBagConstraints);

        jPanel2.setOpaque(false);
        jPanel2.setLayout(new java.awt.GridBagLayout());

        lblFoto.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblFoto.setBorder(new javax.swing.border.LineBorder(colorUI, 3, true));
        lblFoto.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lblFoto.setMaximumSize(new java.awt.Dimension(200, 200));
        lblFoto.setMinimumSize(new java.awt.Dimension(200, 200));
        lblFoto.setPreferredSize(new java.awt.Dimension(200, 200));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(25, 25, 25, 25);
        jPanel2.add(lblFoto, gridBagConstraints);

        lblFirma.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblFirma.setBorder(new javax.swing.border.LineBorder(colorUI, 3, true));
        lblFirma.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lblFirma.setMaximumSize(new java.awt.Dimension(150, 150));
        lblFirma.setMinimumSize(new java.awt.Dimension(150, 150));
        lblFirma.setPreferredSize(new java.awt.Dimension(150, 150));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(25, 25, 25, 25);
        jPanel2.add(lblFirma, gridBagConstraints);

        lblSello.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSello.setBorder(new javax.swing.border.LineBorder(colorUI, 3, true));
        lblSello.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lblSello.setMaximumSize(new java.awt.Dimension(150, 150));
        lblSello.setMinimumSize(new java.awt.Dimension(150, 150));
        lblSello.setPreferredSize(new java.awt.Dimension(150, 150));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(25, 25, 25, 25);
        jPanel2.add(lblSello, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        pBody.add(jPanel2, gridBagConstraints);

        jPanel3.setOpaque(false);
        jPanel3.setLayout(new java.awt.GridBagLayout());

        jPanel1.setMinimumSize(new java.awt.Dimension(400, 350));
        jPanel1.setOpaque(false);
        jPanel1.setPreferredSize(new java.awt.Dimension(400, 350));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        lblNombre.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lblNombre.setText("(*) Nombre:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 5);
        jPanel1.add(lblNombre, gridBagConstraints);

        txtNombre.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        txtNombre.setMinimumSize(new java.awt.Dimension(200, 30));
        txtNombre.setPreferredSize(new java.awt.Dimension(200, 30));
        txtNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNombreKeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(10, 5, 10, 10);
        jPanel1.add(txtNombre, gridBagConstraints);

        lblDireccion.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lblDireccion.setText("(*) Direccion:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 5);
        jPanel1.add(lblDireccion, gridBagConstraints);

        txtDireccion.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        txtDireccion.setMinimumSize(new java.awt.Dimension(200, 30));
        txtDireccion.setPreferredSize(new java.awt.Dimension(200, 30));
        txtDireccion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtDireccionKeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(10, 5, 10, 10);
        jPanel1.add(txtDireccion, gridBagConstraints);

        lblTelefono.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lblTelefono.setText("Telefono:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 5);
        jPanel1.add(lblTelefono, gridBagConstraints);

        lblMail.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lblMail.setText("E-Mail:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 5);
        jPanel1.add(lblMail, gridBagConstraints);

        txtMail.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        txtMail.setMinimumSize(new java.awt.Dimension(200, 30));
        txtMail.setPreferredSize(new java.awt.Dimension(120, 30));
        txtMail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtMailKeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 5, 10, 10);
        jPanel1.add(txtMail, gridBagConstraints);

        lblPropietario.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lblPropietario.setText("Propietario:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 5);
        jPanel1.add(lblPropietario, gridBagConstraints);

        txtPropietario.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        txtPropietario.setMinimumSize(new java.awt.Dimension(200, 30));
        txtPropietario.setPreferredSize(new java.awt.Dimension(200, 30));
        txtPropietario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPropietarioKeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(10, 5, 10, 10);
        jPanel1.add(txtPropietario, gridBagConstraints);

        lblGiro.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lblGiro.setText("(*) NIT:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 5);
        jPanel1.add(lblGiro, gridBagConstraints);

        lblRegistro.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lblRegistro.setText("(*) NRC:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 5);
        jPanel1.add(lblRegistro, gridBagConstraints);

        txtIva.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        txtIva.setMinimumSize(new java.awt.Dimension(6, 30));
        txtIva.setPreferredSize(new java.awt.Dimension(6, 30));
        txtIva.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtIvaKeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 5, 10, 10);
        jPanel1.add(txtIva, gridBagConstraints);

        lblNit.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lblNit.setText("Giro:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 5);
        jPanel1.add(lblNit, gridBagConstraints);

        txtGiro.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        txtGiro.setMinimumSize(new java.awt.Dimension(6, 30));
        txtGiro.setPreferredSize(new java.awt.Dimension(6, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 5, 10, 10);
        jPanel1.add(txtGiro, gridBagConstraints);

        try {
            txtNit.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("####-######-###-#")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtNit.setMinimumSize(new java.awt.Dimension(6, 30));
        txtNit.setPreferredSize(new java.awt.Dimension(6, 30));
        txtNit.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNitKeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(10, 5, 10, 10);
        jPanel1.add(txtNit, gridBagConstraints);

        try {
            txtTelefono.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtTelefono.setMinimumSize(new java.awt.Dimension(6, 30));
        txtTelefono.setPreferredSize(new java.awt.Dimension(6, 30));
        txtTelefono.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTelefonoKeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 5, 10, 10);
        jPanel1.add(txtTelefono, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel3.add(jPanel1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridheight = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        pBody.add(jPanel3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(pBody, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        if ( isComplete () ) {
            if ( nuevo ) {
                insertarEmpresa ();
            } else {
                modificarEmpresa ();
            }
            nuevo = false;
        } else {
            new Mensajes ().mensajeError ( "Verificar los campos requeridos" );
        }

    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnCargarLogoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCargarLogoActionPerformed
        // TODO add your handling code here:
        JFileChooser chooser = new javax.swing.JFileChooser ();
        chooser.setFileSelectionMode ( JFileChooser.FILES_ONLY );
        FileNameExtensionFilter filtro = new FileNameExtensionFilter ( "JPG" , "jpg" );
        chooser.setFileFilter ( filtro );
        int res = chooser.showOpenDialog ( DialogMiEmpresa.this );
        if ( res == JFileChooser.APPROVE_OPTION ) {
            file = chooser.getSelectedFile ();
            ImageIcon image = new ImageIcon ( file.getAbsolutePath () );

            Rectangle rect = lblFoto.getBounds ();
            Image scaledImage = image.getImage ().getScaledInstance ( rect.width , rect.height , Image.SCALE_DEFAULT );
            image = new ImageIcon ( scaledImage );
            lblFoto.setIcon ( image );
            //System.out.println(file.getAbsolutePath());
            //System.out.println(file.getName());
        }
    }//GEN-LAST:event_btnCargarLogoActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        // TODO add your handling code here:
        dispose ();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void txtNombreKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreKeyReleased
        // TODO add your handling code here:
        if ( evt.getKeyCode () == KeyEvent.VK_ENTER ) {
            txtDireccion.requestFocus ();
        }
    }//GEN-LAST:event_txtNombreKeyReleased

    private void txtDireccionKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDireccionKeyReleased
        // TODO add your handling code here:
        if ( evt.getKeyCode () == KeyEvent.VK_ENTER ) {
            txtTelefono.requestFocus ();
        }
    }//GEN-LAST:event_txtDireccionKeyReleased

    private void txtTelefonoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTelefonoKeyReleased
        // TODO add your handling code here:
        if ( evt.getKeyCode () == KeyEvent.VK_ENTER ) {
            txtMail.requestFocus ();
        }
    }//GEN-LAST:event_txtTelefonoKeyReleased

    private void txtMailKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMailKeyReleased
        // TODO add your handling code here:
        if ( evt.getKeyCode () == KeyEvent.VK_ENTER ) {
            txtPropietario.requestFocus ();
        }
    }//GEN-LAST:event_txtMailKeyReleased

    private void txtPropietarioKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPropietarioKeyReleased
        // TODO add your handling code here:
        if ( evt.getKeyCode () == KeyEvent.VK_ENTER ) {
            txtNit.requestFocus ();
        }
    }//GEN-LAST:event_txtPropietarioKeyReleased

    private void txtNitKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNitKeyReleased
        // TODO add your handling code here:
        if ( evt.getKeyCode () == KeyEvent.VK_ENTER ) {
            txtIva.requestFocus ();
        }
    }//GEN-LAST:event_txtNitKeyReleased

    private void txtIvaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIvaKeyReleased
        // TODO add your handling code here:
        if ( evt.getKeyCode () == KeyEvent.VK_ENTER ) {
            txtGiro.requestFocus ();
        }
    }//GEN-LAST:event_txtIvaKeyReleased

    private void btnCargarFirmaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCargarFirmaActionPerformed
        JFileChooser chooser = new javax.swing.JFileChooser ();
        chooser.setFileSelectionMode ( JFileChooser.FILES_ONLY );
        FileNameExtensionFilter filtro = new FileNameExtensionFilter ( "JPG" , "jpg" );
        chooser.setFileFilter ( filtro );
        int res = chooser.showOpenDialog ( DialogMiEmpresa.this );
        if ( res == JFileChooser.APPROVE_OPTION ) {
            firma = chooser.getSelectedFile ();
            ImageIcon image = new ImageIcon ( firma.getAbsolutePath () );
            Rectangle rect = lblFirma.getBounds ();
            Image scaledImage = image.getImage ().getScaledInstance ( rect.width , rect.height , Image.SCALE_DEFAULT );
            image = new ImageIcon ( scaledImage );
            lblFirma.setIcon ( image );
        }
    }//GEN-LAST:event_btnCargarFirmaActionPerformed

    private void btnCargarSelloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCargarSelloActionPerformed
        JFileChooser chooser = new javax.swing.JFileChooser ();
        chooser.setFileSelectionMode ( JFileChooser.FILES_ONLY );
        FileNameExtensionFilter filtro = new FileNameExtensionFilter ( "JPG" , "jpg" );
        chooser.setFileFilter ( filtro );
        int res = chooser.showOpenDialog ( DialogMiEmpresa.this );
        if ( res == JFileChooser.APPROVE_OPTION ) {
            sello = chooser.getSelectedFile ();
            ImageIcon image = new ImageIcon ( sello.getAbsolutePath () );
            Rectangle rect = lblSello.getBounds ();
            Image scaledImage = image.getImage ().getScaledInstance ( rect.width , rect.height , Image.SCALE_DEFAULT );
            image = new ImageIcon ( scaledImage );
            lblSello.setIcon ( image );
        }
    }//GEN-LAST:event_btnCargarSelloActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnCargarFirma;
    private javax.swing.JButton btnCargarLogo;
    private javax.swing.JButton btnCargarSello;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JToolBar.Separator jSeparator3;
    private javax.swing.JToolBar.Separator jSeparator4;
    private javax.swing.JToolBar.Separator jSeparator5;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JLabel lblDireccion;
    private javax.swing.JLabel lblFirma;
    private javax.swing.JLabel lblFoto;
    private javax.swing.JLabel lblGiro;
    private javax.swing.JLabel lblMail;
    private javax.swing.JLabel lblNit;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JLabel lblPropietario;
    private javax.swing.JLabel lblRegistro;
    private javax.swing.JLabel lblSello;
    private javax.swing.JLabel lblTelefono;
    private javax.swing.JPanel pBody;
    private javax.swing.JPanel pTitulo;
    private javax.swing.JTextField txtDireccion;
    private javax.swing.JTextField txtGiro;
    private javax.swing.JTextField txtIva;
    private javax.swing.JTextField txtMail;
    private javax.swing.JFormattedTextField txtNit;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtPropietario;
    private javax.swing.JFormattedTextField txtTelefono;
    // End of variables declaration//GEN-END:variables

    private void cargarInfo () {
        int empresa = create.select ( count () )
                .from ( EMPRESA )
                .fetchOne ( 0 , int.class );
        if ( empresa == 0 ) {
            nuevo = true;
            JOptionPane.showMessageDialog ( null , "sin Empresa" );
        } else {
            nuevo = false;
            Record r = create.select ()
                    .from ( EMPRESA )
                    .fetchOne ();
            try {
                txtNombre.setText ( r.getValue ( EMPRESA.NOMBRE ) );
                txtDireccion.setText ( r.getValue ( EMPRESA.DIRECCION ) );
                txtTelefono.setText ( r.getValue ( EMPRESA.TELEFONO ) );
                txtMail.setText ( r.getValue ( EMPRESA.EMAIL ) );
                txtPropietario.setText ( r.getValue ( EMPRESA.PROPIETARIO ) );
                txtGiro.setText ( r.getValue ( EMPRESA.GIRO ) );
                txtIva.setText ( r.getValue ( EMPRESA.NRC ) );
                txtNit.setText ( r.getValue ( EMPRESA.NIT ) );
                NIT = r.getValue ( EMPRESA.NIT );
                Image img = ImageConverter.byteToImage ( r.getValue ( EMPRESA.LOGO ) );
                Rectangle rect = lblFoto.getBounds ();
                Icon icon = new ImageIcon ( img.getScaledInstance ( lblFoto.getWidth () , lblFoto.getHeight () , Image.SCALE_DEFAULT ) );
                lblFoto.setIcon ( icon );

                Image firmaImg = ImageConverter.byteToImage ( r.getValue ( EMPRESA.FIRMA ) );
                Rectangle rectFirma = lblFirma.getBounds ();
                Icon firmaIcon = new ImageIcon ( firmaImg.getScaledInstance ( lblFirma.getWidth () , lblFirma.getHeight () , Image.SCALE_DEFAULT ) );
                lblFirma.setIcon ( firmaIcon );

                Image selloImg = ImageConverter.byteToImage ( r.getValue ( EMPRESA.SELLO ) );
                Rectangle rectSello = lblSello.getBounds ();
                Icon selloIcon = new ImageIcon ( selloImg.getScaledInstance ( lblSello.getWidth () , lblSello.getHeight () , Image.SCALE_DEFAULT ) );
                lblSello.setIcon ( selloIcon );
            } catch ( IOException ex ) {
                Logger.getLogger ( DialogMiEmpresa.class.getName () ).log ( Level.SEVERE , null , ex );
            }
        }
    }

    private boolean isComplete () {
        if ( txtNombre.getText () == null || txtNombre.getText ().equals ( "" ) ) {
            return false;
        } else if ( txtDireccion.getText () == null || txtDireccion.getText ().equals ( "" ) ) {
            return false;
        } else if ( txtNit.getText () == null || txtNit.getText ().equals ( "" ) ) {
            return false;
        } else {
            return !( txtIva.getText () == null || txtIva.getText ().equals ( "" ) );
        }
    }

    private void insertarEmpresa () {
        byte[] array = null;
        byte[] firmaArray = null;
        byte[] selloArray = null;
        if ( file != null && sello != null && firma != null ) {
            try {
                array = ImageConverter.imageToByte ( file );
                firmaArray = ImageConverter.imageToByte ( firma );
                selloArray = ImageConverter.imageToByte ( sello );
                create.insertInto ( EMPRESA )
                        .set ( EMPRESA.NOMBRE , txtNombre.getText () )
                        .set ( EMPRESA.DIRECCION , txtDireccion.getText () )
                        .set ( EMPRESA.TELEFONO , txtTelefono.getText () )
                        .set ( EMPRESA.EMAIL , txtMail.getText () )
                        .set ( EMPRESA.PROPIETARIO , txtPropietario.getText () )
                        .set ( EMPRESA.GIRO , txtGiro.getText () )
                        .set ( EMPRESA.NRC , txtIva.getText () )
                        .set ( EMPRESA.NIT , txtNit.getText () )
                        .set ( EMPRESA.LOGO , array )
                        .set ( EMPRESA.FIRMA , firmaArray )
                        .set ( EMPRESA.SELLO , selloArray )
                        .execute ();
                new Mensajes ().mensajeInfo ( "Registro almacenado!" );
                dispose ();
            } catch ( IOException ex ) {

            }
        }
    }

    private void modificarEmpresa () {
        byte[] array = null;
        byte[] selloArray = null;
        byte[] firmaArray = null;
        try {
            if ( file != null ) {
                array = ImageConverter.imageToByte ( file );
                create.update ( EMPRESA )
                        .set ( EMPRESA.LOGO , array )
                        .where ( EMPRESA.NIT.equal ( NIT ) ).execute ();
            }
            if ( sello != null ) {
                selloArray = ImageConverter.imageToByte ( sello );
                create.update ( EMPRESA )
                        .set ( EMPRESA.SELLO , selloArray )
                        .where ( EMPRESA.NIT.equal ( NIT ) ).execute ();
            }
            if ( firma != null ) {
                firmaArray = ImageConverter.imageToByte ( firma );
                create.update ( EMPRESA )
                        .set ( EMPRESA.FIRMA , firmaArray )
                        .where ( EMPRESA.NIT.equal ( NIT ) ).execute ();
            }
            create.update ( EMPRESA )
                    .set ( EMPRESA.NOMBRE , txtNombre.getText () )
                    .set ( EMPRESA.DIRECCION , txtDireccion.getText () )
                    .set ( EMPRESA.TELEFONO , txtTelefono.getText () )
                    .set ( EMPRESA.EMAIL , txtMail.getText () )
                    .set ( EMPRESA.PROPIETARIO , txtPropietario.getText () )
                    .set ( EMPRESA.GIRO , txtGiro.getText () )
                    .set ( EMPRESA.NRC , txtIva.getText () )
                    .set ( EMPRESA.NIT , txtNit.getText () )
                    .where ( EMPRESA.NIT.equal ( NIT ) )
                    .execute ();
            NIT = txtGiro.getText ();
            new Mensajes ().mensajeInfo ( "Registro editado satisfactoriamente!" );
            dispose ();
        } catch ( IOException ex ) {

        }
    }

}
